from sklearn import datasets 
from sklearn.cluster import KMeans
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

%matplotlib inline

iris = datasets.load_iris() 
X = pd.DataFrame(iris.data)
X.columns = ['Sepal_Length','Sepal_Width','Petal_Length','Petal_Width']
print(X)
y = pd.DataFrame(iris.target)
y.columns = ['Targets']

plt.figure(figsize=(14,7))
colormap = np.array(['red','lime','black'])
plt.subplot(1,2,1)
plt.scatter(X.Sepal_Length,X.Sepal_Width,c=colormap[y.Targets],s=40)
plt.title('Sepal')

plt.subplot(1,2,2)
plt.scatter(X.Petal_Length,X.Petal_Width,c=colormap[y.Targets],s=40)
plt.title('Petal')

X_train,X_test,y_train,y_test = train_test_split(iris.data,iris.target)

model = KMeans(n_clusters = 3)
model.fit(X_train,y_train) 
print('K-Mean: ',metrics.accuracy_score(y_test,model.predict(X_test)))


#-------Expectation and Maximization----------EM AlGORITHM
from sklearn.mixture import GaussianMixture 

model2 = GaussianMixture(n_components=3) 
model2.fit(X_train,y_train)
print('EM Algorithm:',accuracy_score(y_test,model2.predict(X_test)))